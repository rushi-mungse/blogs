import Tabs from "../../components/Tabs"
import { GetServerSideProps } from "next"
import { AxiosResponse } from "axios"
import { ICollectionResponse, ICategory, IArticle } from "../../types"
import {fetchArticles, fetchCategories} from '../../http'
import ArticlesList from "../../components/ArticlesList"
import { useRouter } from "next/router"
import qs from 'qs';
import Head from 'next/head';
import { handleTitle } from '../../utils';

interface IPropsType {
  categories : {
    items : ICategory[]
  };
  articles : {
    items : IArticle[]
  }
}

const category = ({categories, articles} : IPropsType) => {
  const router = useRouter();
  const {category : categorySlug} = router.query;

  return (
    <>
        <Head>
          <title>Coders Blog's - { handleTitle(categorySlug as string) }</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
       </Head>

        <div>
          <Tabs  categories={categories.items}/>
          <ArticlesList articles={articles.items}/>
        </div>
    </>

  )
}

export default category

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const options = {
    populate : ['image','author.avatar'],
    sort : ['id:desc'],
    filters: {
      category: {
          slug: query.category,
      },
    },
  }

  const queryString  = qs.stringify(options);
  const { data: categories }: AxiosResponse<ICollectionResponse<ICategory[]>> =  await fetchCategories();
  const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> =  await fetchArticles(queryString);

  return {
    props: {
      categories: {
        items: categories.data,
      },
      articles : {
        items : articles.data,
      }
    },
  };
};